(Used in AppUSerService.java)

Password encoding is a critical part of the registration process,
which is basically not storing the password in plaintext.
BCrypt is one of the best solutions available.

@Bean
public PasswordEncoder encoder() {
    return new BCryptPasswordEncoder();
}

BCrypt will internally generate a random salt
This is important to understand because it means that each call
will have a different result, so we only need to encode the password once.

To make this random salt generation work. BCrypt will store the salt inside
the hash value itse.f For instance, the following hash value

$2a$10$ZLhnHxdpHETcxmtEStgpI./Ri1mksgJ9iDP36FmfMdYyVg9g0b2dq

"2a" represents the BCrypt algorithm version
"10" represents the strength of the algorithm
"ZLhnHxdpHETcxmtEStgpI" is actually the randomly generated salt
Basically, the first 22 characters are salt.
The remaining part of the last field is the actual hashed version of the plain text.
